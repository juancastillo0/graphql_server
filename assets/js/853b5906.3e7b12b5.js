"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5967],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return t?n.createElement(f,s(s({ref:r},c),{},{components:t})):n.createElement(f,s({ref:r},c))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8701:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:3},s="Enums",i={unversionedId:"graphql-schema-types/enums",id:"graphql-schema-types/enums",title:"Enums",description:"Enums are text values which are restricted to a set of predefined variants. Their behavior is similar to scalars and they don't have a nested fields.",source:"@site/docs/graphql-schema-types/enums.md",sourceDirName:"graphql-schema-types",slug:"/graphql-schema-types/enums",permalink:"/leto/docs/graphql-schema-types/enums",draft:!1,editUrl:"https://github.com/juancastillo0/leto/edit/main/README.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Scalars",permalink:"/leto/docs/graphql-schema-types/scalars"},next:{title:"Objects",permalink:"/leto/docs/graphql-schema-types/objects"}},p={},l=[],c={toc:l};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enums"},"Enums"),(0,a.kt)("p",null,"Enums are text values which are restricted to a set of predefined variants. Their behavior is similar to scalars and they don't have a nested fields."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://spec.graphql.org/draft/#sec-Enums"},"GraphQL Specification")),(0,a.kt)("p",null,"They require a unique name and a set of entries mapping their string representation to the Dart value obtained after parsing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'"""The error reason on a failed sign up attempt"""\nenum SignUpError {\n    usernameTooShort,\n    usernameNotFound,\n    wrongPassword,\n    passwordTooSimple,\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:leto/leto.dart';\n\nfinal signUpErrorGraphQLType = enumTypeFromStrings(\n  'SignUpError', \n  [\n    'usernameTooShort',\n    'usernameNotFound',\n    'wrongPassword',\n    'passwordTooSimple',\n  ],\n  description: 'The error reason on a failed sign up attempt',\n);\n\n\n// Or with code generation\n\n/// The error reason on a failed sign up attempt\n@GraphQLEnum()\nenum SignUpError {\n    usernameTooShort,\n    usernameNotFound,\n    wrongPassword,\n    passwordTooSimple,\n}\n\n")))}u.isMDXComponent=!0}}]);