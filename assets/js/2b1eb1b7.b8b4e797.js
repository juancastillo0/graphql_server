"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[325],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||l;return r?a.createElement(m,o(o({ref:t},u),{},{components:r})):a.createElement(m,o({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7554:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:5},o="Handlers",i={unversionedId:"leto_shelf/handlers",id:"leto_shelf/handlers",title:"Handlers",description:"This package provides shelf handlers for answering HTTP requests.",source:"@site/docs/leto_shelf/handlers.md",sourceDirName:"leto_shelf",slug:"/leto_shelf/handlers",permalink:"/leto/docs/leto_shelf/handlers",draft:!1,editUrl:"https://github.com/juancastillo0/leto/edit/main/leto_shelf/README.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Server example",permalink:"/leto/docs/leto_shelf/server-example"},next:{title:"Features and Utilities",permalink:"/leto/docs/leto_shelf/features-and-utilities"}},s={},p=[{value:"graphQLHttp",id:"graphqlhttp",level:2},{value:"graphQLWebSocket",id:"graphqlwebsocket",level:2},{value:"Web UI Explorers",id:"web-ui-explorers",level:2},{value:"GraphiQL",id:"graphiql",level:3},{value:"Playground",id:"playground",level:3},{value:"Altair",id:"altair",level:3}],u={toc:p};function h(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"handlers"},"Handlers"),(0,n.kt)("p",null,"This package provides ",(0,n.kt)("inlineCode",{parentName:"p"},"shelf")," handlers for answering HTTP requests."),(0,n.kt)("h2",{id:"graphqlhttp"},"graphQLHttp"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/juancastillo0/leto/blob/main/leto_shelf/test/shelf_graphql_test.dart"},"Tests")),(0,n.kt)("p",null,'Handles POST and GET requests for "application/graphql", "application/json", "application/graphql+json" and "multipart/form-data" mime types. The implementations follows the ',(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md"},"https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/jaydenseric/graphql-multipart-request-spec"},"https://github.com/jaydenseric/graphql-multipart-request-spec")," specifications."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"POST requests support GraphQL Query and Mutation operations"),(0,n.kt)("li",{parentName:"ul"},"We restrict GET requests to allow only GraphQL Query operations"),(0,n.kt)("li",{parentName:"ul"},'Support for file Upload with "multipart/form-data" bodies')),(0,n.kt)("p",null,"A 200 status code with a JSON body will be sent by default, with a structure following the ",(0,n.kt)("a",{parentName:"p",href:"https://spec.graphql.org/draft/#sec-Response"},"spec"),"."),(0,n.kt)("p",null,"A 400 status code will be sent for requests that do not follow the specifications."),(0,n.kt)("p",null,"// TODO: A 400 status code will be sent for requests with validation errors."),(0,n.kt)("p",null,"A 405, method not allowed, status code will be sent for Mutation operations in GET requests"),(0,n.kt)("h2",{id:"graphqlwebsocket"},"graphQLWebSocket"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/juancastillo0/leto/blob/main/leto_shelf/test/mutation_and_subscription_test.dart"},"Tests")),(0,n.kt)("p",null,'Handles Query, Mutation and Subscription requests using the "graphql-ws" or "graphql-transport-ws" Web Socket subprotocols. When using this handler, the ',(0,n.kt)("a",{parentName:"p",href:"#headers"},"headers")," and ",(0,n.kt)("a",{parentName:"p",href:"/leto/docs/leto_shelf/features-and-utilities#custom-response"},"response")," utilities will have no effect."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"validateIncomingConnection")," parameter allows you to support authentication for your Web Socket connection, it also passes a ",(0,n.kt)("inlineCode",{parentName:"p"},"GraphQLWebSocketServer")," as an argument which could be used for closing the connection. Some ping and keep alive ",(0,n.kt)("inlineCode",{parentName:"p"},"Duration")," configuration parameters are provided to remove stale connection or identify problems when reaching the client."),(0,n.kt)("p",null,"// TODO: 2A throwing in the ",(0,n.kt)("inlineCode",{parentName:"p"},"subscribe")," field function"),(0,n.kt)("h2",{id:"web-ui-explorers"},"Web UI Explorers"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/juancastillo0/leto/blob/main/leto_shelf/test/graphql_ui_test.dart"},"Tests")),(0,n.kt)("p",null,"These web pages will allow you to explore your GraphQL Schema, view all the types and fields, read each element's documentation, and execute requests against a GraphQL server. "),(0,n.kt)("p",null,"Usually exposed as static HTML in your deployed server. Each has multiple configurations for determining the default tabs, queries and variables, the GraphQL HTTP and WebSocket (subscription) endpoints, the UI's theme and more."),(0,n.kt)("p",null,"All of the static HTML files and configurations can be found in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/juancastillo0/leto/tree/main/leto_shelf/lib/src/graphql_ui"},"graphql_ui folder"),"."),(0,n.kt)("h3",{id:"graphiql"},"GraphiQL"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql/graphiql/tree/main/packages/graphiql#readme"},"Documentation"),". Use ",(0,n.kt)("inlineCode",{parentName:"p"},"graphiqlHandler"),". The classic GraphQL explorer"),(0,n.kt)("h3",{id:"playground"},"Playground"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql/graphql-playground"},"Documentation"),". Use ",(0,n.kt)("inlineCode",{parentName:"p"},"playgroundHandler"),". Support for multiple tabs, subscriptions."),(0,n.kt)("h3",{id:"altair"},"Altair"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/altair-graphql/altair"},"Documentation"),". Use ",(0,n.kt)("inlineCode",{parentName:"p"},"altairHandler"),". Support for file Upload, multiple tabs, subscriptions, plugins."))}h.isMDXComponent=!0}}]);